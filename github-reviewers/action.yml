name: github-reviewers
description: Send slack message when assigned pull request reviewers

inputs:

  slack-webhook-url:
    description: Slack Webhook URL
    required: true

  message:
    description: Slack message, Defaults to "レビューお願いします :pray:"
    required: false
    default: "レビューお願いします :pray:"

  message-color:
    description: Slack message attachments color, Defaults to "#000000"
    required: false
    default: "#000000"

runs:

  using: composite
  steps:
    - name: Get reviewers
      run: |
        ruby -r json -r time -e '
          # ページ情報取得
          header = `curl -I -H "authorization: Bearer ${{ github.token }}" \
                      -H "Accept: application/vnd.github.mockingbird-preview+json" \
                      "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/timeline"`

          # 最新のイベントを取得するために最終ページを見つける
          link_str = header.split("\r\n").each.with_index do |str, i|
                      key, value = str.split(": ")
                      if key == "link"
                        break value
                      elsif i == header.split("\r\n").size - 1
                        break nil
                      end
                    end

          # イベント情報取得
          timeline_url = link_str ? link_str.match(/ <(.+?)>; rel=\"last\"/)[1] : "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/timeline"
          events = `curl -H "authorization: Bearer ${{ github.token }}" \
                      -H "Accept: application/vnd.github.mockingbird-preview+json" \
                      "#{timeline_url}"`

          # イベント履歴からレビュア設定したユーザ名を取得
          event_at = "${{ github.event.pull_request.updated_at }}"
          reviewers = JSON.parse(events).group_by {|event| event["created_at"] }[event_at].each.with_object([]) do |event, reviewers|
                        next unless event["event"] == "review_requested"
                        reviewers << event["requested_reviewer"]["login"]
                      end

          # レビュア人数分のActionsジョブが実行されるので重複排除
          if reviewers[0] == "${{ github.event.requested_reviewer.login }}"
            `echo "reviewers=#{reviewers.map {|reviewer| "@#{reviewer}" }.join(" ")}" >> $GITHUB_OUTPUT`
            `echo "event_time=#{Time.parse(event_at).to_i}" >> $GITHUB_OUTPUT`
            `echo "is_send=true" >> $GITHUB_OUTPUT`
          else
            `echo "is_send=false" >> $GITHUB_OUTPUT`
          end
        '
      id: get-reviewers
      shell: bash

    - name: Send message
      env:
        MESSAGE: |
          {
            "attachments": [{
              "title": "#${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}",
              "title_link": "${{ github.event.pull_request.html_url }}",
              "text": "${{ steps.get-reviewers.outputs.reviewers }}\n${{ inputs.message }}",
              "footer": "<${{ github.event.repository.html_url }}|${{ github.repository }}>",
              "footer_icon": "https://slack.github.com/static/img/favicon-neutral.png",
              "ts": ${{ steps.get-reviewers.outputs.event_time }},
              "color": "${{ inputs.message-color }}"
            }]
          }
      run: |
        if "${{ steps.get-reviewers.outputs.is_send }}"; then
          echo ${MESSAGE} | curl -X POST ${{ inputs.slack-webhook-url }} -d @-
        fi
      shell: bash
