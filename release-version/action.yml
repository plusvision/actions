name: release-version
description: Run git push Versioning file by label

inputs:

  github-user-name:
    description: Commit author name, Defaults to github-actions[bot]
    required: false
    default: github-actions[bot]

  github-user-email:
    description: Commit author email, Defaults to github-actions[bot]@users.noreply.github.com
    required: false
    default: github-actions[bot]@users.noreply.github.com

  commit-message:
    description: Commit message, Defaults to `ðŸŽ‰ Release ${NEW_VERSION}`
    required: false
    default: ":tada: Release ${NEW_VERSION}"

  version-file:
    description: Versioning file, Defaults to `.version`
    required: false
    default: .version

runs:

  using: composite
  steps:
    - name: Bump version
      run: |
        ruby -r fileutils -e '
          FileUtils.touch "${{ inputs.version-file }}"

          current_version     = File.read("${{ inputs.version-file }}").strip
          current_version     = "0.0.0" if current_version.empty?
          major, minor, patch = current_version.split(".")

          label       = "${{ github.event.label.name }}"
          new_version = if label.include?("major")
                          "#{major.succ}.0.0"
                        elsif label.include?("minor")
                          "#{major}.#{minor.succ}.0"
                        elsif label.include?("patch")
                          "#{major}.#{minor}.#{patch.succ}"
                        end

          File.write("${{ inputs.version-file }}", "#{new_version}\n")
          puts "::set-output name=new_version::#{new_version}"
        '
      id: bump-version
      shell: bash

    - name: Run git push
      env:
        NEW_VERSION: ${{ steps.bump-version.outputs.new_version }}
      run: |
        git config user.name ${{ inputs.github-user-name }}
        git config user.email ${{ inputs.github-user-email }}

        git add ${{ inputs.version-file }}
        git commit -m "${{ inputs.commit-message }}"

        git push
      shell: bash
